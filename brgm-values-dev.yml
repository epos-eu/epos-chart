global:
  imagePullSecrets:
    enabled: true
    secretName: "epos-registry-secret"
    registry:
      server: "epos-ci.brgm.fr:5005"
      username: "valerio.vinciarelli@epos-eric.eu"
      password: ""
      email: "valerio.vinciarelli@epos-eric.eu"

backofficeservice:
  repository:
    image: epos-ci.brgm.fr:5005/epos/backoffice-service
    tag: main
  environment:
    CONNECTION_POOL_INIT_SIZE: "5"
    CONNECTION_POOL_MAX_SIZE: "15"
    CONNECTION_POOL_MIN_SIZE: "5"
    PERSISTENCE_NAME: EPOSDataModel
    POSTGRES_DB: cerif
    POSTGRES_HOST: '{{ include "epos-chart.fullname"  . }}-metadatadatabase'
    POSTGRES_PASSWORD: changeme
    POSTGRES_PORT: "5432"
    POSTGRES_USER: postgres
    POSTGRESQL_CONNECTION_STRING: jdbc:postgresql://{{ include "epos-chart.fullname"  . }}-metadatadatabase:5432/cerif?user=postgres&password=changeme
  replicas: 1
  nodeSelector: {}
  resources: {}
  imagePullPolicy: IfNotPresent
  serviceAccount: ""
backofficeui:
  repository:
    image: epos-ci.brgm.fr:5005/epos/epos-backoffice-gui
    tag: develop
  ingress:
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /backoffice/
    host: minikube.local
    path: /backoffice/
    class: nginx
    enabled: true
    tls:
      enabled: false
      secretName: ""
  environment:
    API_HOST: http://{{ include "epos-chart.fullname"  . }}-gateway:5000/api
    BASE_URL: /backoffice/
  replicas: 1
  nodeSelector: {}
  resources: {}
  imagePullPolicy: IfNotPresent
  serviceAccount: ""
converterroutine:
  repository:
    image: epos-ci.brgm.fr:5005/epos/converter-routine-go
    tag: main
  persistence:
    converter:
      storageClass: '-'
      size: 1Gi
      accessMode:
        - ReadWriteOnce
      enabled: true
  environment:
    BROKER_HOST: '{{ include "epos-chart.fullname"  . }}-rabbitmq'
    BROKER_PASSWORD: changeme
    BROKER_USERNAME: rabbitmq-user
    BROKER_VHOST: changeme
    CONVERTER_CATALOGUE_CONNECTION_STRING: jdbc:postgresql://{{ include "epos-chart.fullname"  . }}-metadatadatabase:5432/cerif?user=postgres&password=changeme
    LOG_LEVEL: INFO
    PERSISTENCE_NAME: EPOSDataModel
  replicas: 1
  nodeSelector: {}
  resources: {}
  imagePullPolicy: IfNotPresent
  serviceAccount: ""
converterservice:
  repository:
    image: epos-ci.brgm.fr:5005/epos/converter-service-go
    tag: main
  persistence:
    converter:
      storageClass: '-'
      size: 1Gi
      accessMode:
        - ReadWriteOnce
      enabled: true
  environment:
    BROKER_HOST: '{{ include "epos-chart.fullname"  . }}-rabbitmq'
    BROKER_PASSWORD: changeme
    BROKER_USERNAME: rabbitmq-user
    BROKER_VHOST: changeme
    LOG_LEVEL: INFO
    POSTGRES_DB: cerif
    POSTGRES_HOST: '{{ include "epos-chart.fullname"  . }}-metadatadatabase'
    POSTGRES_PASSWORD: changeme
    POSTGRES_PORT: "5432"
    POSTGRES_USER: postgres
    POSTGRESQL_CONNECTION_STRING: jdbc:postgresql://{{ include "epos-chart.fullname"  . }}-metadatadatabase:5432/cerif?user=postgres&password=changeme
  replicas: 1
  nodeSelector: {}
  resources: {}
  imagePullPolicy: IfNotPresent
  serviceAccount: ""
dataportal:
  repository:
    image: epos-ci.brgm.fr:5005/epos/epos-gui/deploy
    tag: new-gui-master
  ingress:
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /dataportal/
    host: minikube.local
    path: /dataportal/
    class: nginx
    enabled: true
    tls:
      enabled: false
      secretName: ""
  environment:
    API_HOST: http://{{ include "epos-chart.fullname"  . }}-gateway:5000/api
    BASE_URL: /dataportal/
  replicas: 1
  nodeSelector: {}
  resources: {}
  imagePullPolicy: IfNotPresent
  serviceAccount: ""
emailsenderservice:
  repository:
    image: epos-ci.brgm.fr:5005/epos/email-sender-service
    tag: main
  environment:
    CONNECTION_POOL_INIT_SIZE: "5"
    CONNECTION_POOL_MAX_SIZE: "15"
    CONNECTION_POOL_MIN_SIZE: "5"
    DEV_EMAILS: foo.bar@somewhere.com;change.me@somewhere.com
    ENVIRONMENT_TYPE: development
    MAIL_API_KEY: changeme
    MAIL_API_URL: https://api.example.email/
    MAIL_HOST: mail.domain.com
    MAIL_PASSWORD: changeme
    MAIL_TYPE: API
    MAIL_USER: user@email.com
    PERSISTENCE_NAME: EPOSDataModel
    POSTGRES_DB: cerif
    POSTGRES_HOST: '{{ include "epos-chart.fullname"  . }}-metadatadatabase'
    POSTGRES_PASSWORD: changeme
    POSTGRES_PORT: "5432"
    POSTGRES_USER: postgres
    POSTGRESQL_CONNECTION_STRING: jdbc:postgresql://{{ include "epos-chart.fullname"  . }}-metadatadatabase:5432/cerif?user=postgres&password=changeme
    SENDER: data-portal
    SENDER_DOMAIN: your.domain.com
    SENDER_NAME: EPOS Platform Opensource
  replicas: 1
  nodeSelector: {}
  resources: {}
  imagePullPolicy: IfNotPresent
  serviceAccount: ""
externalaccessservice:
  repository:
    image: epos-ci.brgm.fr:5005/epos/external-access-service
    tag: main
  environment:
    BROKER_HOST: '{{ include "epos-chart.fullname"  . }}-rabbitmq'
    BROKER_PASSWORD: changeme
    BROKER_USERNAME: rabbitmq-user
    BROKER_VHOST: changeme
    CONNECTION_POOL_INIT_SIZE: "5"
    CONNECTION_POOL_MAX_SIZE: "15"
    CONNECTION_POOL_MIN_SIZE: "5"
    POSTGRES_DB: cerif
    POSTGRES_HOST: '{{ include "epos-chart.fullname"  . }}-metadatadatabase'
    POSTGRES_PASSWORD: changeme
    POSTGRES_PORT: "5432"
    POSTGRES_USER: postgres
    POSTGRESQL_CONNECTION_STRING: jdbc:postgresql://{{ include "epos-chart.fullname"  . }}-metadatadatabase:5432/cerif?user=postgres&password=changeme
  replicas: 1
  nodeSelector: {}
  resources: {}
  imagePullPolicy: IfNotPresent
  serviceAccount: ""
gateway:
  repository:
    image: epos/epos-api-gateway-test
    tag: latest
  ingress:
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /api/v1/
    host: minikube.local
    path: /api/v1/
    class: nginx
    enabled: true
    tls:
      enabled: false
      secretName: ""
  environment:
    AAI_SERVICE_ENDPOINT: ""
    IS_AAI_ENABLED: "false"
    LOAD_BACKOFFICE_API: false:false
    LOAD_CONVERTER_API: false:false
    LOAD_EMAIL_SENDER_API: false:false
    LOAD_EXTERNAL_ACCESS_API: false:false
    LOAD_INGESTOR_API: false:false
    LOAD_RESOURCES_API: false:false
    LOAD_SHARING_API: false:false
    PREFIX: '{{ include "epos-chart.fullname"  . }}-'
    SECURITY_KEY: ""
  replicas: 1
  nodeSelector: {}
  resources: {}
  imagePullPolicy: IfNotPresent
  serviceAccount: ""
ingestorservice:
  repository:
    image: epos-ci.brgm.fr:5005/epos/ingestor-service
    tag: main
  environment:
    CONNECTION_POOL_INIT_SIZE: "5"
    CONNECTION_POOL_MAX_SIZE: "15"
    CONNECTION_POOL_MIN_SIZE: "5"
    INGESTOR_HASH: FA9BEB99E4029AD5A6615399E7BBAE21356086B3
    PERSISTENCE_NAME: EPOSDataModel
    POSTGRES_DB: cerif
    POSTGRES_HOST: '{{ include "epos-chart.fullname"  . }}-metadatadatabase'
    POSTGRES_PASSWORD: changeme
    POSTGRES_PORT: "5432"
    POSTGRES_USER: postgres
    POSTGRESQL_CONNECTION_STRING: jdbc:postgresql://{{ include "epos-chart.fullname"  . }}-metadatadatabase:5432/cerif?user=postgres&password=changeme
  replicas: 1
  nodeSelector: {}
  resources: {}
  imagePullPolicy: IfNotPresent
  serviceAccount: ""
metadatadatabase:
  repository:
    image: epos-ci.brgm.fr:5005/epos/metadata-database/deploy
    tag: master-refactor
  persistence:
    psqldata:
      storageClass: '-'
      size: 1Gi
      accessMode:
        - ReadWriteOnce
      enabled: true
  environment:
    POSTGRES_DB: cerif
    POSTGRES_PASSWORD: changeme
    POSTGRES_USER: postgres
  replicas: 1
  nodeSelector: {}
  resources: {}
  imagePullPolicy: IfNotPresent
  serviceAccount: ""
metadatapopulator:
  repository:
    image: epos-ci.brgm.fr:5005/epos/metadata-cache
    tag: development
  environment:
    MAX_PARALLEL: "10"
    SECURITY_CODE: changeme
  replicas: 1
  nodeSelector: {}
  resources: {}
  imagePullPolicy: IfNotPresent
  serviceAccount: ""
rabbitmq:
  repository:
    image: rabbitmq
    tag: 3.13.7-management
  environment:
    RABBITMQ_DEFAULT_PASS: changeme
    RABBITMQ_DEFAULT_USER: rabbitmq-user
    RABBITMQ_DEFAULT_VHOST: changeme
  replicas: 1
  nodeSelector: {}
  resources: {}
  imagePullPolicy: IfNotPresent
  serviceAccount: ""
resourcesservice:
  repository:
    image: epos-ci.brgm.fr:5005/epos/resources-service
    tag: main
  environment:
    APICONTEXT: /api/v1
    APIHOST: minikube.local
    BROKER_HOST: '{{ include "epos-chart.fullname"  . }}-rabbitmq'
    BROKER_PASSWORD: changeme
    BROKER_USERNAME: rabbitmq-user
    BROKER_VHOST: changeme
    CONNECTION_POOL_INIT_SIZE: "5"
    CONNECTION_POOL_MAX_SIZE: "15"
    CONNECTION_POOL_MIN_SIZE: "5"
    FACETS_DEFAULT: "true"
    FACETS_TYPE_DEFAULT: categories
    MONITORING: "false"
    MONITORING_PWD: ""
    MONITORING_URL: ""
    MONITORING_USER: ""
    PERSISTENCE_NAME: EPOSDataModel
    POSTGRES_DB: cerif
    POSTGRES_HOST: '{{ include "epos-chart.fullname"  . }}-metadatadatabase'
    POSTGRES_PASSWORD: changeme
    POSTGRES_PORT: "5432"
    POSTGRES_USER: postgres
    POSTGRESQL_CONNECTION_STRING: jdbc:postgresql://{{ include "epos-chart.fullname"  . }}-metadatadatabase:5432/cerif?user=postgres&password=changeme
  replicas: 1
  nodeSelector: {}
  resources: {}
  imagePullPolicy: IfNotPresent
  serviceAccount: ""
sharingservice:
  repository:
    image: epos-ci.brgm.fr:5005/epos/configuration-sharing-service
    tag: main
  environment:
    PERSISTENCE_NAME_SHARING: EPOSSharing
    POSTGRES_DB: cerif
    POSTGRES_HOST: '{{ include "epos-chart.fullname"  . }}-metadatadatabase'
    POSTGRES_PASSWORD: changeme
    POSTGRES_PORT: "5432"
    POSTGRES_USER: postgres
    POSTGRESQL_CONNECTION_STRING: jdbc:postgresql://{{ include "epos-chart.fullname"  . }}-metadatadatabase:5432/cerif?user=postgres&password=changeme
  replicas: 1
  nodeSelector: {}
  resources: {}
  imagePullPolicy: IfNotPresent
  serviceAccount: ""